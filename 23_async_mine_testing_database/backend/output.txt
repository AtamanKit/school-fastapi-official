============================= test session starts ==============================
platform linux -- Python 3.12.2, pytest-8.0.1, pluggy-1.4.0
rootdir: /backend
configfile: pytest.ini
plugins: asyncio-0.23.5.post1, postgresql-5.1.0, anyio-4.2.0
asyncio: mode=Mode.AUTO
collected 2 items

app/tests/test_sql_app.py::test_create_user 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    app.tests.conftest:conftest.py:43 Check the database engine: <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x79bf86757910>
DEBUG    app.tests.conftest:conftest.py:44 Current event loop in setup_database: 133863490000736
DEBUG    app.database:database.py:69 Current event loop in drop_all: 133863490000736
-------------------------------- live log call ---------------------------------
DEBUG    app.tests.test_sql_app:test_sql_app.py:15 Current event loop (user) before request: 133863490000736
INFO     httpx:_client.py:1758 HTTP Request: POST http://test/users/ "HTTP/1.1 200 OK"
DEBUG    app.tests.test_sql_app:test_sql_app.py:20 Current event loop (user) after request: 133863490000736
PASSED                                                                   [ 50%]
------------------------------ live log teardown -------------------------------
DEBUG    app.tests.conftest:conftest.py:52 Current event loop in teardown_databsase: 133863490000736
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector

app/tests/test_sql_app.py::test_create_item_user 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    app.tests.conftest:conftest.py:43 Check the database engine: None
DEBUG    app.tests.conftest:conftest.py:44 Current event loop in setup_database: 133863490001264
DEBUG    app.database:database.py:69 Current event loop in drop_all: 133863490001264
-------------------------------- live log call ---------------------------------
DEBUG    app.tests.test_sql_app:test_sql_app.py:40 Current event loop (item) before request: 133863490001264
INFO     httpx:_client.py:1758 HTTP Request: POST http://test/users/ "HTTP/1.1 200 OK"
DEBUG    app.tests.test_sql_app:test_sql_app.py:44 Current event loop (item) after request: 133863490001264
INFO     httpx:_client.py:1758 HTTP Request: POST http://test/users/1/items/ "HTTP/1.1 200 OK"
PASSED                                                                   [100%]
------------------------------ live log teardown -------------------------------
DEBUG    app.tests.conftest:conftest.py:52 Current event loop in teardown_databsase: 133863490001264
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector


=============================== warnings summary ===============================
app/database.py:14
  /backend/app/database.py:14: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

../usr/local/lib/python3.12/site-packages/pydantic/_internal/_config.py:272
../usr/local/lib/python3.12/site-packages/pydantic/_internal/_config.py:272
  /usr/local/lib/python3.12/site-packages/pydantic/_internal/_config.py:272: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.6/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

../usr/local/lib/python3.12/site-packages/pydantic/_internal/_config.py:322
  /usr/local/lib/python3.12/site-packages/pydantic/_internal/_config.py:322: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

app/tests/test_sql_app.py::test_create_item_user
  /usr/local/lib/python3.12/site-packages/pydantic/main.py:1024: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.6/migration/
    warnings.warn('The `dict` method is deprecated; use `model_dump` instead.', category=PydanticDeprecatedSince20)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 2 passed, 5 warnings in 0.20s =========================
